- job-template:
    name: '{pipeline}-dsvm-nodepool{job-suffix}'
    node: '{node}'

    wrappers:
      - build-timeout:
          timeout: 65
      - timestamps

    builders:
      - link-logs
      - net-info
      - devstack-checkout
      - shell: |
          #!/bin/bash -xe
          export PYTHONUNBUFFERED=true
          export DEVSTACK_GATE_TIMEOUT=60
          # Disable tempest as nodepool is talking to the cloud not tempest.
          export DEVSTACK_GATE_TEMPEST=0
          # Use neutron as the public clouds in use are neutron based.
          export DEVSTACK_GATE_NEUTRON=1
          # The nodepool process needs sudo rights in order to
          # perform dib image builds
          export DEVSTACK_GATE_REMOVE_STACK_SUDO=0
          # Override so we get a bare minimum set of base compute services
          # required to have nodepool function.
          OVERRIDE_ENABLED_SERVICES=dstat,g-api,g-reg,key,mysql,n-api,n-cond,n-cpu,n-crt,n-sch,q-agt,q-dhcp,q-l3,q-lbaas,q-meta,q-metering,q-svc,rabbit,s-account,s-container,s-object,s-proxy
          # n-obj has been removed from mitaka
          if [[ "stable/kilo stable/liberty" =~ $ZUUL_BRANCH ]]; then
              OVERRIDE_ENABLED_SERVICES+=,n-obj,
          fi
          export OVERRIDE_ENABLED_SERVICES
          export BRANCH_OVERRIDE={branch-override}
          if [ "$BRANCH_OVERRIDE" != "default" ] ; then
              export OVERRIDE_ZUUL_BRANCH=$BRANCH_OVERRIDE
          fi
          # Because we are testing a non standard project, add the
          # our project repository. This makes zuul do the right
          # reference magic for testing changes.
          export PROJECTS="openstack-infra/nodepool $PROJECTS"
          # note the actual url here is somewhat irrelevant because it
          # caches in nodepool, however make it a valid url for
          # documentation purposes.
          export DEVSTACK_LOCAL_CONFIG="enable_plugin nodepool git://git.openstack.org/openstack-infra/nodepool"

          function post_test_hook {{
              /opt/stack/new/nodepool/tools/check_devstack_plugin.sh
          }}
          export -f post_test_hook

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh

    publishers:
      - devstack-logs
      - console-log

- job-template:
    name: '{pipeline}-dsvm-nodepool-src-shade{job-suffix}'
    node: '{node}'

    wrappers:
      - build-timeout:
          timeout: 65
      - timestamps

    builders:
      - link-logs
      - net-info
      - devstack-checkout
      - shell: |
          #!/bin/bash -xe
          export PYTHONUNBUFFERED=true
          export DEVSTACK_GATE_TIMEOUT=60
          # Disable tempest as nodepool is talking to the cloud not tempest.
          export DEVSTACK_GATE_TEMPEST=0
          # Use neutron as the public clouds in use are neutron based.
          export DEVSTACK_GATE_NEUTRON=1
          # The nodepool process needs sudo rights in order to
          # perform dib image builds
          export DEVSTACK_GATE_REMOVE_STACK_SUDO=0
          # Override so we get a bare minimum set of base compute services
          # required to have nodepool function.
          OVERRIDE_ENABLED_SERVICES=dstat,g-api,g-reg,key,mysql,n-api,n-cond,n-cpu,n-crt,n-sch,q-agt,q-dhcp,q-l3,q-lbaas,q-meta,q-metering,q-svc,rabbit,s-account,s-container,s-object,s-proxy
          # n-obj has been removed from mitaka
          if [[ "stable/kilo stable/liberty" =~ $ZUUL_BRANCH ]]; then
              OVERRIDE_ENABLED_SERVICES+=,n-obj,
          fi
          export OVERRIDE_ENABLED_SERVICES
          export BRANCH_OVERRIDE={branch-override}
          if [ "$BRANCH_OVERRIDE" != "default" ] ; then
              export OVERRIDE_ZUUL_BRANCH=$BRANCH_OVERRIDE
          fi
          # Because we are testing a non standard project, add the
          # our project repository. This makes zuul do the right
          # reference magic for testing changes.
          export PROJECTS="openstack-infra/nodepool $PROJECTS"
          export PROJECTS="openstack-infra/shade $PROJECTS"
          # note the actual url here is somewhat irrelevant because it
          # caches in nodepool, however make it a valid url for
          # documentation purposes.
          export DEVSTACK_LOCAL_CONFIG="enable_plugin nodepool git://git.openstack.org/openstack-infra/nodepool"
          export DEVSTACK_LOCAL_CONFIG+=$'\n'"LIBS_FROM_GIT=shade"

          function post_test_hook {{
              /opt/stack/new/nodepool/tools/check_devstack_plugin.sh
          }}
          export -f post_test_hook

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh

    publishers:
      - devstack-logs
      - console-log
