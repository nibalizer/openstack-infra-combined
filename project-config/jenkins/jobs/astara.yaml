- builder:
    name: astara-dsvm
    builders:
      - shell: |
          #!/bin/bash -xe
          export PYTHONUNBUFFERED=true
          export DEVSTACK_GATE_TIMEOUT=120
          export DEVSTACK_GATE_TEMPEST={run-tempest}
          export DEVSTACK_GATE_NEUTRON=1
          export BRANCH_OVERRIDE={branch-override}
          if [ "$BRANCH_OVERRIDE" != "default" ] ; then
              export OVERRIDE_ZUUL_BRANCH=$BRANCH_OVERRIDE
          fi

          export PROJECTS="openstack/astara $PROJECTS"
          export PROJECTS="openstack/astara-neutron $PROJECTS"
          export PROJECTS="openstack/astara-appliance $PROJECTS"
          export PROJECTS="openstack/astara-horizon $PROJECTS"

          export DEVSTACK_LOCAL_CONFIG="enable_plugin astara https://git.openstack.org/openstack/astara"$'\n'"enable_service astara"

          export BUILD_APPLIANCE={build-astara-appliance}
          if [ "$BUILD_APPLIANCE" == "1" ] ; then
              export DEVSTACK_LOCAL_CONFIG+=$'\n'"BUILD_ASTARA_APPLIANCE_IMAGE=True"
          fi

          if [ "$DEVSTACK_GATE_TEMPEST" == "0" ]; then
              function post_test_hook {{
                    source $BASE/new/devstack/openrc admin admin
                    cd /opt/stack/new/astara
                    sudo -H -E -u stack ./tools/run_functional.sh
              }}
              export -f post_test_hook
          fi

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh

- job-template:
    name: '{pipeline}-functional-dsvm-astara{job-suffix}'
    node: '{node}'

    wrappers:
      - build-timeout:
          timeout: 125
      - timestamps

    builders:
      - link-logs
      - net-info
      - devstack-checkout
      - astara-dsvm:
          build-astara-appliance: 0
          run-tempest: 0
          branch-override: '{branch-override}'
    publishers:
      - devstack-logs
      - console-log

- job-template:
    name: '{pipeline}-functional-dsvm-astara-appliance-src{job-suffix}'
    node: '{node}'

    wrappers:
      - build-timeout:
          timeout: 125
      - timestamps

    builders:
      - link-logs
      - net-info
      - devstack-checkout
      - astara-dsvm:
          build-astara-appliance: 1
          run-tempest: 0
          branch-override: '{branch-override}'
    publishers:
      - devstack-logs
      - console-log

- job:
    name: 'astara-appliance-buildimage'
    node: bare-trusty

    builders:
      - link-logs
      - net-info
      - gerrit-git-prep
      - diskimage-builder-install
      - shell: |
          #!/bin/bash -xe
          tox -e build_image
          if [[ "$ZUUL_REFNAME" =~ "stable" ]]; then
              branch="$(echo $ZUUL_REFNAME | cut -d/ -f2)"
              branch_tag="_$branch"
          else
              branch_tag=""
          fi
          mv build/astara_appliance*.qcow2 $WORKSPACE/astara_appliance$branch_tag.qcow2

    publishers:
      - scp:
          site: 'tarballs.openstack.org'
          files:
            - source: 'astara_appliance*.qcow2'
              target: 'tarballs/astara-appliance/images'
              keep-hierarchy: false
              copy-after-failure: false
      - console-log
